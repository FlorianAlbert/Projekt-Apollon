@page "/Identity/Account/ConfirmAccount/{id:guid}/{token}"

@using Apollon.Mud.Client.Data.Models.Account

@inject Apollon.Mud.Client.Services.Interfaces.IUserService UserService
@inject NavigationManager navManager

<div class="container d-flex justify-content-center">
    <div class="card mt-5" style="width:45rem">
        <div class="card-body text-center">
            <h1 class="display-2">E-Mail Bestätigen</h1>

            @if (successfullConfirmation is null)
            {
                <section>
                    <h4 class="ml-2">Wir arbeiten daran Deine E-Mail zu verifizieren</h4>
                    <h4 class="ml-2">Bitte gedulde Dich noch kurz</h4>
                    <hr />
                    <button class="btn btn-primary mt-2">Jetzt Anmelden</button>
                </section>
            }
            else if (successfullConfirmation == false)
            {
                <section>
                    <h4 class="ml-2">Deine E-Mail Adresse konnte leider nicht bestätigt werden</h4>
                    <h4 class="ml-2">Versuche bitte erneut den Link aus der Bestätigungsemail aufzurufen</h4>
                    <hr />
                    <p></p>
                    <p class="mt-5"><strong class="text-muted">Sollte das Problem weiterhin bestehen, wende Dich bitte an den Support</strong></p>
                </section>
            }
        </div>
    </div>
</div>

@code {

    /// <summary>
    /// This GUID represents the user whos E-Mail is to be confirmed
    /// </summary>
    [Parameter]
    public Guid Id { get; set; }

    /// <summary>
    /// This GUID represents the request to validate a certain E-Mail and will be delivered in the link
    /// </summary>
    [Parameter]
    public string Token { get; set; }

    /// <summary>
    /// The nullable Bool to differentiate between: Confirmation pending / confirmation successfull / confirmation didnt succeed
    /// </summary>
    bool? successfullConfirmation = null;

    /// <summary>
    /// The Model to validate the "Resend confirmation E-Mail" Form
    /// </summary>
    private ForgotPasswordModel resendEmailModel = new ForgotPasswordModel();

    /// <summary>
    /// The Context for the "Resend confirmation E-Mail" Form
    /// </summary>
    private EditContext resendEmailContext;

    /// <summary>
    /// When initialized the component instantiates the EditContext
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        successfullConfirmation = await UserService.ConfirmUserRegistration(Id, Token);
        if(successfullConfirmation.Value is true)
        {
            navManager.NavigateTo("/Identity/Account/Confirmation");
        }
    }
}

