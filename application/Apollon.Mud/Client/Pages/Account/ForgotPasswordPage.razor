@page "/Identity/Account/ForgotPassword"
@inject NavigationManager NavManager
@inject Apollon.Mud.Client.Services.Interfaces.IAuthorizationService authorizationService
@using Apollon.Mud.Client.Data.Models



<div class="container d-flex justify-content-center">
    <div class="card mt-5" style="width:45rem">
        <div class="card-body text-center">
            <h1 class="display-2">Passwort vergessen?</h1>

            <section>
                <h4 class="ml-2">Hier kannst Du es zurücksetzen</h4>
                <hr />

                @if (loginFailure)
                {
                    <label class="text-danger mt-1"><strong>Die eingegebene E-Mail wurde nicht gefunden!</strong></label>
                }
                <EditForm EditContext="@resetPasswordContext" OnSubmit="@HandleResetSubmit" novalidate>
                    <DataAnnotationsValidator />

                    <div class="form-group mt-5">
                        <label for="Input_Email">E-Mail</label>
                        <div class="d-flex justify-content-center">
                            <InputText class="form-control" style="width:25rem" type="email" placeholder="E-Mail" id="Email" @bind-Value="forgotPasswordModel.Email" />
                        </div>
                    </div>
                    <div class="text-danger">
                        <ValidationMessage For=@(() => forgotPasswordModel.Email) />
                    </div>
                    <div class="form-group mt-4">
                        <label for="Input_Password">E-Mail bestätigen</label>
                        <div class="d-flex justify-content-center">
                            <InputText class="form-control" style="width:25rem" placeholder="E-Mail bestätigen" id="Passwort" @bind-Value="forgotPasswordModel.EmailVerification" />
                        </div>
                    </div>
                    <div class="text-danger">
                        <ValidationMessage For=@(() => forgotPasswordModel.EmailVerification) />
                    </div>
                    <button class="btn btn-primary mt-5" type="submit">Zurücksetzen</button>
                </EditForm>
                <p></p>
                <p class="mt-5">
                    <label class="text-muted">Dir ist es wieder eingefallen?</label>
                    <a class="text-muted" href="/Identity/Account/Login"> Jetzt anmelden</a>
                </p>
            </section>
        </div>
    </div>
</div>

@code {
    /// <summary>
    /// The bound Boolean for the response to the user
    /// </summary>
    bool loginFailure = false;

    /// <summary>
    /// The Model to validate the "Forgot Password" Form
    /// </summary>
    private ForgotPasswordModel forgotPasswordModel = new ForgotPasswordModel();

    /// <summary>
    /// The Context for the "Resend confirmation E-Mail" Form
    /// </summary>
    private EditContext resetPasswordContext;

    /// <summary>
    /// When the component is initialized this Method instantiates the EditContext
    /// </summary>
    protected override void OnInitialized()
    {
        resetPasswordContext = new EditContext(forgotPasswordModel);
    }

    /// <summary>
    /// This Method, called when the user wants to submit sending the password-reset link, validates the form and reacts accordingly
    /// </summary>
    /// <returns>The Task that sends the password-reset Email</returns>
    private async Task HandleResetSubmit()
    {
        loginFailure = false;
        var validCredentials = resetPasswordContext.Validate();
        if (validCredentials)
        {
            bool response = await authorizationService.RequestPasswordReset(forgotPasswordModel.Email);
            if (response)
            {
                NavManager.NavigateTo("/Identity/Account/Register/VerifyEmail");
            }
            else
            {
                loginFailure = true;
            }
        }
    }
}

