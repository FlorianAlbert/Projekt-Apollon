@page "/dungeon/overview/{DungeonId:guid}"

@using Apollon.Mud.Client.Data.Models.Game
@using Apollon.Mud.Shared.Dungeon
@using Apollon.Mud.Shared.Dungeon.Avatar
@using Apollon.Mud.Shared.Dungeon.Class
@using Apollon.Mud.Shared.Dungeon.Inspectable
@using Apollon.Mud.Shared.Dungeon.Inspectable.Takeable
@using Apollon.Mud.Shared.Dungeon.Inspectable.Takeable.Consumable
@using Apollon.Mud.Shared.Dungeon.Inspectable.Takeable.Usable
@using Apollon.Mud.Shared.Dungeon.Inspectable.Takeable.Wearable
@using Apollon.Mud.Shared.Dungeon.Race
@using Apollon.Mud.Shared.Dungeon.Npc
@using Apollon.Mud.Shared.Dungeon.Requestable
@using Apollon.Mud.Shared.Dungeon.Room
@using Apollon.Mud.Shared.Dungeon.User

@inject Apollon.Mud.Client.Services.Interfaces.IAvatarService AvatarService
@inject Apollon.Mud.Client.Services.Interfaces.IClassService ClassService
@inject Apollon.Mud.Client.Services.Interfaces.IConsumableService ConsumableService
@inject Apollon.Mud.Client.Services.Interfaces.IDungeonService DungeonService
@inject Apollon.Mud.Client.Services.Interfaces.IInspectableService InspectableService
@inject Apollon.Mud.Client.Services.Interfaces.INpcService NpcService
@inject Apollon.Mud.Client.Services.Interfaces.IRaceService RaceService
@inject Apollon.Mud.Client.Services.Interfaces.IRoomService RoomService
@inject Apollon.Mud.Client.Services.Interfaces.ISpecialActionService SpecialActionService
@inject Apollon.Mud.Client.Services.Interfaces.ITakeableService TakeableService
@inject Apollon.Mud.Client.Services.Interfaces.IUsableService UsableService
@inject Apollon.Mud.Client.Services.Interfaces.IWearableService WearableService


<AuthorizeView>
    <Authorized>
        <div class="container" style="min-height: 93vh; text-align:center">
            <h2 class="text-white mt-4">Dungeon Übersicht</h2>
            <div class="card mt-5">
                <div class="card-header">Dungeon Infos</div>
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-3">
                                    <div class="float-start">
                                        <h6>Name: </h6>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="float-start">
                                        <span>@dungeon.DungeonName</span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-3">
                                    <div class="float-start">
                                        <h6>Beschreibung: </h6>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="float-start">
                                        <span>@dungeon.DungeonDescription</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col">
                            <div class="row">
                                <div class="col-3">
                                    <div class="float-start">
                                        <h6>Epoche:</h6>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="float-start">
                                        <span>@dungeon.DungeonEpoch</span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-3">
                                    <div class="float-start">
                                        <h6>Status:</h6>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="float-start">
                                        @if (dungeon.Status == 0)
                                        {
                                            <span>Aktiv</span>
                                            <div class="spinner-grow text-success" role="status" style="width: 1rem; height: 1rem"></div>
                                        }
                                        else
                                        {
                                            <span>Inaktiv</span>
                                            <div class="spinner-grow text-danger" role="status" style="width: 1rem; height: 1rem"></div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card mt-5">
                <div class="card-header">Klassen</div>
                <div class="card-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col"></th>
                                <th scope="col">Name</th>
                                <th scope="col">Leben</th>
                                <th scope="col">Verteidigung</th>
                                <th scope="col">Schaden</th>
                                <th scope="col">Beschreibung</th>
                                <th scope="col">Items</th>
                                <th scope="col">Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{int classIndex = 1;}
                            @foreach (ClassDto classDto in dungeonClasses)
                            {
                                int itemCount = classDto.InventoryTakeableDtos.Count()
                                                + classDto.InventoryConsumableDtos.Count()
                                                + classDto.InventoryUsableDtos.Count()
                                                + classDto.InventoryWearableDtos.Count();
                                <tr>
                                    <th scope="row">@classIndex</th>
                                    <td>@classDto.Name</td>
                                    <td>@classDto.DefaultHealth</td>
                                    <td>@classDto.DefaultProtection</td>
                                    <td>@classDto.DefaultDamage</td>
                                    <td>@classDto.Description</td>
                                    <td>@itemCount</td>
                                    <td>@classDto.Status</td>
                                </tr>
                                classIndex++;
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card mt-5">
                <div class="card-header">Rassen</div>
                <div class="card-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col"></th>
                                <th scope="col">Name</th>
                                <th scope="col">Leben</th>
                                <th scope="col">Verteidigung</th>
                                <th scope="col">Schaden</th>
                                <th scope="col">Beschreibung</th>
                                <th scope="col">Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{int raceIndex = 1;}
                            @foreach (RaceDto raceDto in dungeonRaces)
                            {
                                <tr>
                                    <th scope="row">@raceIndex</th>
                                    <td>@raceDto.Name</td>
                                    <td>@raceDto.DefaultHealth</td>
                                    <td>@raceDto.DefaultProtection</td>
                                    <td>@raceDto.DefaultDamage</td>
                                    <td>@raceDto.Description</td>
                                    <td>@raceDto.Status</td>
                                </tr>
                                raceIndex++;
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card mt-5">
                <div class="card-header">Items</div>
                <div class="card-body">
                    <div class="mt-2">
                        <h6>Untersuchbare Items</h6>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col"></th>
                                    <th scope="col">Name</th>
                                    <th scope="col">Beschreibung</th>
                                    <th scope="col">Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{int inspectableIndex = 1;}
                                @foreach (InspectableDto inspectableDto in dungeonInspectables)
                                {
                                    <tr>
                                        <th scope="row">@inspectableIndex</th>
                                        <td>@inspectableDto.Name</td>
                                        <td>@inspectableDto.Description</td>
                                        <td>@inspectableDto.Status</td>
                                    </tr>
                                    inspectableIndex++;
                                }
                            </tbody>
                        </table>
                    </div>
                    <hr class="featurette-divider" />
                    <div class="mt-2">
                        <h6>Aufnehmbare Items</h6>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col"></th>
                                    <th scope="col">Name</th>
                                    <th scope="col">Beschreibung</th>
                                    <th scope="col">Gewicht</th>
                                    <th scope="col">Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{int takeableIndex = 1;}
                                @foreach (TakeableDto takeableDto in dungeonTakeables)
                                {
                                    <tr>
                                        <th scope="row">@takeableIndex</th>
                                        <td>@takeableDto.Name</td>
                                        <td>@takeableDto.Description</td>
                                        <td>@takeableDto.Weight</td>
                                        <td>@takeableDto.Status</td>
                                    </tr>
                                    takeableIndex++;
                                }
                            </tbody>
                        </table>
                    </div>
                    <hr class="featurette-divider" />
                    <div class="mt-2">
                        <h6>Konsumierbare Items</h6>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col"></th>
                                    <th scope="col">Name</th>
                                    <th scope="col">Beschreibung</th>
                                    <th scope="col">Gewicht</th>
                                    <th scope="col">Effekt</th>
                                    <th scope="col">Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{int consumableIndex = 1;}
                                @foreach (ConsumableDto consumableDto in dungeonConsumables)
                                {
                                    <tr>
                                        <th scope="row">@consumableIndex</th>
                                        <td>@consumableDto.Name</td>
                                        <td>@consumableDto.Description</td>
                                        <td>@consumableDto.Weight</td>
                                        <td>@consumableDto.EffectDescription</td>
                                        <td>@consumableDto.Status</td>
                                    </tr>
                                    consumableIndex++;
                                }
                            </tbody>
                        </table>
                    </div>
                    <hr class="featurette-divider" />
                    <div class="mt-2">
                        <h6>Verwendbare Items</h6>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col"></th>
                                    <th scope="col">Name</th>
                                    <th scope="col">Beschreibung</th>
                                    <th scope="col">Gewicht</th>
                                    <th scope="col">Schadensboost</th>
                                    <th scope="col">Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{int usableIndex = 1;}
                                @foreach (UsableDto usableDto in dungeonUsables)
                                {
                                    <tr>
                                        <th scope="row">@usableIndex</th>
                                        <td>@usableDto.Name</td>
                                        <td>@usableDto.Description</td>
                                        <td>@usableDto.Weight</td>
                                        <td>@usableDto.DamageBoost</td>
                                        <td>@usableDto.Status</td>
                                    </tr>
                                    usableIndex++;
                                }
                            </tbody>
                        </table>
                    </div>
                    <hr class="featurette-divider" />
                    <div class="mt-2">
                        <h6>Tragbare Items</h6>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col"></th>
                                    <th scope="col">Name</th>
                                    <th scope="col">Beschreibung</th>
                                    <th scope="col">Gewicht</th>
                                    <th scope="col">Verteidigungsboost</th>
                                    <th scope="col">Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{int wearableIndex = 1;}
                                @foreach (WearableDto wearableDto in dungeonWearables)
                                {
                                    <tr>
                                        <th scope="row">@wearableIndex</th>
                                        <td>@wearableDto.Name</td>
                                        <td>@wearableDto.Description</td>
                                        <td>@wearableDto.Weight</td>
                                        <td>@wearableDto.ProtectionBoost</td>
                                        <td>@wearableDto.Status</td>
                                    </tr>
                                    wearableIndex++;
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="card mt-5">
                <div class="card-header">Npcs</div>
                <div class="card-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col"></th>
                                <th scope="col">Name</th>
                                <th scope="col">Text</th>
                                <th scope="col">Beschreibung</th>
                                <th scope="col">Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{int npcIndex = 1;}
                            @foreach (NpcDto npcDto in dungeonNpcs)
                            {
                                <tr>
                                    <th scope="row">@npcIndex</th>
                                    <td>@npcDto.Name</td>
                                    <td>@npcDto.Text</td>
                                    <td>@npcDto.Description</td>
                                    <td>@npcDto.Status</td>
                                </tr>
                                npcIndex++;
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card mt-5">
                <div class="card-header">Befehle</div>
                <div class="card-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col"></th>
                                <th scope="col">Befehl</th>
                                <th scope="col">Regex</th>
                                <th scope="col">Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{int requestableIndex = 1;}
                            @foreach (RequestableDto requestableDto in dungeonRequestables)
                            {
                                <tr>
                                    <th scope="row">@requestableIndex</th>
                                    <td>@requestableDto.PatternForPlayer</td>
                                    <td>@requestableDto.MessageRegex</td>
                                    <td>@requestableDto.Status</td>
                                </tr>
                                requestableIndex++;
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card mt-5 mb-5">
                <div class="card-header">Räume</div>
                <div class="card-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col"></th>
                                <th scope="col">Name</th>
                                <th scope="col">Beschreibung</th>
                                <th scope="col">Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{int roomIndex = 1;}
                            @foreach (RoomDto roomDto in dungeonRooms)
                            {
                                <tr>
                                    <th scope="row">@roomIndex</th>
                                    <td>@roomDto.Name</td>
                                    <td>@roomDto.Description</td>
                                    <td>@roomDto.Status</td>
                                </tr>
                                roomIndex++;
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <Apollon.Mud.Client.Shared.Components.Account.LoginReminderComponent/>
    </NotAuthorized>
</AuthorizeView>

@code {
    /// <summary>
    /// The Id of the current dungeon
    /// </summary>
    [Parameter]
    public Guid DungeonId { get; set; }

    /// <summary>
    /// Contains all Infos of the dungeon
    /// </summary>
    #region Dungeon Information

    DungeonDto dungeon = new DungeonDto();

    List<ClassDto> dungeonClasses = new List<ClassDto>();

    List<RaceDto> dungeonRaces = new List<RaceDto>();

    List<InspectableDto> dungeonInspectables = new List<InspectableDto>();

    List<TakeableDto> dungeonTakeables = new List<TakeableDto>();

    List<ConsumableDto> dungeonConsumables = new List<ConsumableDto>();

    List<UsableDto> dungeonUsables = new List<UsableDto>();

    List<WearableDto> dungeonWearables = new List<WearableDto>();

    List<NpcDto> dungeonNpcs = new List<NpcDto>();

    List<RequestableDto> dungeonRequestables = new List<RequestableDto>();

    List<RoomDto> dungeonRooms = new List<RoomDto>();

    #endregion

    protected async override Task OnInitializedAsync()
    {
        if (DungeonId != Guid.Empty)
        {
            dungeon = (await DungeonService.GetDungeon(DungeonId)) ?? new DungeonDto();
            dungeonClasses = (await ClassService.GetAllClasses(DungeonId))?.ToList() ?? new List<ClassDto>();
            dungeonRaces = (await RaceService.GetAllRaces(DungeonId))?.ToList() ?? new List<RaceDto>();
            dungeonInspectables = (await InspectableService.GetAllInspectables(DungeonId))?.ToList() ?? new List<InspectableDto>();
            dungeonTakeables = (await TakeableService.GetAllTakeables(DungeonId))?.ToList() ?? new List<TakeableDto>();
            dungeonWearables = (await WearableService.GetAllWearables(DungeonId))?.ToList() ?? new List<WearableDto>();
            dungeonUsables = (await UsableService.GetAllUsables(DungeonId))?.ToList() ?? new List<UsableDto>();
            dungeonConsumables = (await ConsumableService.GetAllConsumables(DungeonId))?.ToList() ?? new List<ConsumableDto>();
            dungeonNpcs = (await NpcService.GetAllNpcs(DungeonId))?.ToList() ?? new List<NpcDto>();
            dungeonRequestables = (await SpecialActionService.GetAllRequestables(DungeonId))?.ToList() ?? new List<RequestableDto>();
            dungeonRooms = (await RoomService.GetAllRooms(DungeonId))?.ToList() ?? new List<RoomDto>();
        }
        StateHasChanged();
    }
}
