@page "/admin/users"
@layout AdminLayout

@using Apollon.Mud.Shared.Dungeon.User
@inject Apollon.Mud.Client.Services.Interfaces.IUserService UserService
@inject Apollon.Mud.Client.Data.Account.UserContext UserContext



<div class="container" style="display: flex; flex-direction: column; height: 87vh">


    <div class="card mt-5">
        <div class="card-header"><h3>Liste aller Spieler</h3></div>
        <div class="card-body">
            <table class="table text-center">
                <thead>
                    <tr>
                        <th scope="col"></th>
                        <th scope="col">Name</th>
                        <th scope="col">Verifiziert</th>
                        <th scope="col">Zuletzt online</th>
                        <th scope="col">Adminrechte</th>
                        <th scope="col">Löschen</th>
                    </tr>
                </thead>
                <tbody>
                    @{int userIndex = 1;}
                    @foreach (DungeonUserDto user in allUsers)
                    {
                        <tr>
                            <th scope="row">@userIndex</th>
                            <td>@user.Email.Split("@")[0]</td>
                            @if (user.EmailConfirmed)
                            {
                                <td><div class="spinner-grow text-success" role="status" style="width: 1rem; height: 1rem"></div></td>
                            }
                            else
                            {
                                <td><div class="spinner-grow text-danger" role="status" style="width: 1rem; height: 1rem"></div></td>
                            }
                            <td>@user.LastActive</td>
                            <td>
                                <div class="form-check form-switch d-flex justify-content-center">
                                    <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault">
                                </div>
                            </td>
                            <td><button class="btn btn-sm btn-danger">X</button></td>
                         </tr>
                        userIndex++;
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    /// <summary>
    /// This list contains all users
    /// </summary>
    private List<DungeonUserDto> allUsers = new List<DungeonUserDto>();


    /// <summary>
    /// When initialized the Method requests all registrated Users
    /// </summary>
    protected async override Task OnInitializedAsync()
    {

        var response = await UserService.GetAllUsers();
        if (!(response is null)) allUsers = response.ToList();

        StateHasChanged();

    }

    /// <summary>
    /// When the "Delete" Button of a Dungeon-Card is clicked, this Method deletes the corresponding dungeon
    /// </summary>
    /// <param name="dungeon"> The dungeon the user wants to delete</param>
    private async void DeleteUserButtonClicked(DungeonUserDto userToDelete)
    {
        if (!(userToDelete is null))
        {
            if (!(userToDelete.Id == Guid.Empty))
            {
                await UserService.DeleteUser(userToDelete.Id);
                allUsers.Remove(userToDelete);
                StateHasChanged();
            }
        }
    }
}
