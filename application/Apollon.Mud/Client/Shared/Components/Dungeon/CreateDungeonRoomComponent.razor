@using Apollon.Mud.Client.Data.Models
@using Apollon.Mud.Shared.Dungeon.Room
@using Apollon.Mud.Shared.Dungeon.Inspectable
@using Apollon.Mud.Shared.Dungeon.Inspectable.Takeable
@using Apollon.Mud.Shared.Dungeon.Inspectable.Takeable.Consumable
@using Apollon.Mud.Shared.Dungeon.Inspectable.Takeable.Usable
@using Apollon.Mud.Shared.Dungeon.Inspectable.Takeable.Wearable

<div class="card">
    <div class="card-header">
        <h2>Räume</h2>
    </div>
    <div class="card-body">

        <EditForm EditContext="@roomContext" OnSubmit="@HandleRoomSubmit" novalidate>
            <DataAnnotationsValidator />

            <div class="form-group">
                <div class="row">
                    <div class="col-3">
                        <h5 class="mt-1">Raumauswahl</h5>
                    </div>
                    <div class="col">
                        <div class="d-flex justify-content-center">
                            <select class="form-select" aria-label="Default select example" @bind="chosenRoom" @onselect="@RoomSelectionChanged()" @onselect:stopPropagation="true">
                                @if (!(dungeonRooms is null))
                                {
                                    <option value="NoRoom" selected hidden></option>
                                    @foreach (RoomDto dungeonRoom in dungeonRooms)
                                    {
                                        <option value="@dungeonRoom.Name">@dungeonRoom.Name</option>
                                    }
                                }
                            </select>
                            <button class="btn btn-outline-primary ms-3" style="width:3rem; font-size:20px" type="button" @onclick="NewRoomButtonClicked">
                                <TooltipComponent Text="Neuen Raum erstellen">
                                    <strong>+</strong>
                                </TooltipComponent>
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <hr class="featurette-divider" />

            <div class="form-group mt-2">
                <div class="row">
                    <div class="col-3">
                        <h5 class="mt-1">Name</h5>
                    </div>
                    <div class="col">
                        <div class="d-flex justify-content-center">
                            <InputText class="form-control" placeholder="Name" id="Name" @bind-Value="dungeonRoomModel.Name" @onfocusout="NameFieldLostFocus" />
                        </div>
                        <div class="text-danger">
                            <ValidationMessage For=@(() => dungeonRoomModel.Name) />
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group mt-5">
                <div class="row">
                    <div class="col-3">
                        <h5 class="mt-1">Beschreibung</h5>
                    </div>
                    <div class="col">
                        <div class="d-flex justify-content-center">
                            <InputTextArea class="form-control" placeholder="Beschreibung" @bind-Value="dungeonRoomModel.Description" />
                        </div>
                        <div class="text-danger">
                            <ValidationMessage For=@(() => dungeonRoomModel.Description) />
                        </div>
                    </div>
                </div>
            </div>

            <hr class="featurette-divider" />

            <div class="row">
                <div class="col-lg-12 d-flex justify-content-center">
                    <h4 class="mt-1">Item-Auswahl</h4>
                </div>
            </div>

            <div class="row mt-2">
                <div class="col-2" />
                <div class="col-4">
                    @if (roomItemCount < 8)
                    {
                        <button class="btn btn-outline-secondary ms-1" style="max-width:15rem" type="button" @onclick="AddItemButtonClicked">Raumitem hinzufügen</button>
                    }
                    else
                    {
                        <TooltipComponent Text="Maximum erreicht">
                            <button class="btn btn-outline-secondary ms-1" style="max-width:15rem" type="button" disabled>Raumitem hinzufügen</button>
                        </TooltipComponent>
                    }
                </div>
                <div class="col-4">
                    @if (roomItemCount >= 1)
                    {
                        <button class="btn btn-outline-secondary me-1" style="max-width:15rem" type="button" @onclick="RemoveItemButtonClicked">Raumitem entfernen</button>
                    }
                    else
                    {
                        <TooltipComponent Text="Minimum erreicht">
                            <button class="btn btn-outline-secondary" style="max-width:15rem" type="button" disabled>Raumitem entfernen</button>
                        </TooltipComponent>
                    }
                </div>
            </div>

            @if (roomItemCount >= 1)
            {
                <div class="form-group mt-5">
                    <div class="row">
                        <div class="col-4">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="itemCategory[0]">
                                    <option value="NoCategory" selected disabled hidden>Kategorie</option>
                                    <option value="Inspectable">Untersuchbar</option>
                                    <option value="Takeable">Aufnehmbar</option>
                                    <option value="Consumable">Konsumierbar</option>
                                    <option value="Usable">Nutzbar</option>
                                    <option value="Wearable">Kleidung</option>
                                </select>
                            </div>
                        </div>
                        <div class="col">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="roomItems[0]">
                                    <option value="NoItem" selected hidden></option>
                                    @if (itemCategory[0].Equals("Inspectable"))
                                    {
                                        @foreach (InspectableDto inspectable in dungeonInspectables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[0].Equals("Takeable"))
                                    {
                                        @foreach (TakeableDto inspectable in dungeonTakeables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[0].Equals("Consumable"))
                                    {
                                        @foreach (ConsumableDto consumable in dungeonConsumables)
                                        {
                                            <option value="@consumable.Name">@consumable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[0].Equals("Usable"))
                                    {
                                        @foreach (UsableDto usable in dungeonUsables)
                                        {
                                            <option value="@usable.Name">@usable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[0].Equals("Wearable"))
                                    {
                                        @foreach (WearableDto wearable in dungeonWearables)
                                        {
                                            <option value="@wearable.Name">@wearable.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

            }
            @if (roomItemCount >= 2)
            {
                <div class="form-group mt-5">
                    <div class="row">
                        <div class="col-4">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="itemCategory[1]">
                                    <option value="" selected disabled hidden>Kategorie</option>
                                    <option value="Inspectable">Untersuchbar</option>
                                    <option value="Takeable">Aufnehmbar</option>
                                    <option value="Consumable">Konsumierbar</option>
                                    <option value="Usable">Nutzbar</option>
                                    <option value="Wearable">Kleidung</option>
                                </select>
                            </div>
                        </div>
                        <div class="col">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="roomItems[1]">
                                    @if (itemCategory[1].Equals("Inspectable"))
                                    {
                                        @foreach (InspectableDto inspectable in dungeonInspectables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[1].Equals("Takeable"))
                                    {
                                        @foreach (TakeableDto inspectable in dungeonTakeables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[1].Equals("Consumable"))
                                    {
                                        @foreach (ConsumableDto consumable in dungeonConsumables)
                                        {
                                            <option value="@consumable.Name">@consumable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[1].Equals("Usable"))
                                    {
                                        @foreach (UsableDto usable in dungeonUsables)
                                        {
                                            <option value="@usable.Name">@usable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[1].Equals("Wearable"))
                                    {
                                        @foreach (WearableDto wearable in dungeonWearables)
                                        {
                                            <option value="@wearable.Name">@wearable.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @if (roomItemCount >= 3)
            {
                <div class="form-group mt-5">
                    <div class="row">
                        <div class="col-4">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="itemCategory[2]">
                                    <option value="" selected disabled hidden>Kategorie</option>
                                    <option value="Inspectable">Untersuchbar</option>
                                    <option value="Takeable">Aufnehmbar</option>
                                    <option value="Consumable">Konsumierbar</option>
                                    <option value="Usable">Nutzbar</option>
                                    <option value="Wearable">Kleidung</option>
                                </select>
                            </div>
                        </div>
                        <div class="col">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="roomItems[2]">
                                    @if (itemCategory[2].Equals("Inspectable"))
                                    {
                                        @foreach (InspectableDto inspectable in dungeonInspectables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[2].Equals("Takeable"))
                                    {
                                        @foreach (TakeableDto inspectable in dungeonTakeables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[2].Equals("Consumable"))
                                    {
                                        @foreach (ConsumableDto consumable in dungeonConsumables)
                                        {
                                            <option value="@consumable.Name">@consumable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[2].Equals("Usable"))
                                    {
                                        @foreach (UsableDto usable in dungeonUsables)
                                        {
                                            <option value="@usable.Name">@usable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[2].Equals("Wearable"))
                                    {
                                        @foreach (WearableDto wearable in dungeonWearables)
                                        {
                                            <option value="@wearable.Name">@wearable.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @if (roomItemCount >= 4)
            {
                <div class="form-group mt-5">
                    <div class="row">
                        <div class="col-4">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="itemCategory[3]">
                                    <option value="" selected disabled hidden>Kategorie</option>
                                    <option value="Inspectable">Untersuchbar</option>
                                    <option value="Takeable">Aufnehmbar</option>
                                    <option value="Consumable">Konsumierbar</option>
                                    <option value="Usable">Nutzbar</option>
                                    <option value="Wearable">Kleidung</option>
                                </select>
                            </div>
                        </div>
                        <div class="col">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="roomItems[3]">
                                    @if (itemCategory[3].Equals("Inspectable"))
                                    {
                                        @foreach (InspectableDto inspectable in dungeonInspectables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[3].Equals("Takeable"))
                                    {
                                        @foreach (TakeableDto inspectable in dungeonTakeables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[3].Equals("Consumable"))
                                    {
                                        @foreach (ConsumableDto consumable in dungeonConsumables)
                                        {
                                            <option value="@consumable.Name">@consumable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[3].Equals("Usable"))
                                    {
                                        @foreach (UsableDto usable in dungeonUsables)
                                        {
                                            <option value="@usable.Name">@usable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[3].Equals("Wearable"))
                                    {
                                        @foreach (WearableDto wearable in dungeonWearables)
                                        {
                                            <option value="@wearable.Name">@wearable.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @if (roomItemCount >= 5)
            {
                <div class="form-group mt-5">
                    <div class="row">
                        <div class="col-4">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="itemCategory[4]">
                                    <option value="" selected disabled hidden>Kategorie</option>
                                    <option value="Inspectable">Untersuchbar</option>
                                    <option value="Takeable">Aufnehmbar</option>
                                    <option value="Consumable">Konsumierbar</option>
                                    <option value="Usable">Nutzbar</option>
                                    <option value="Wearable">Kleidung</option>
                                </select>
                            </div>
                        </div>
                        <div class="col">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="roomItems[4]">
                                    @if (itemCategory[4].Equals("Inspectable"))
                                    {
                                        @foreach (InspectableDto inspectable in dungeonInspectables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[4].Equals("Takeable"))
                                    {
                                        @foreach (TakeableDto inspectable in dungeonTakeables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[4].Equals("Consumable"))
                                    {
                                        @foreach (ConsumableDto consumable in dungeonConsumables)
                                        {
                                            <option value="@consumable.Name">@consumable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[4].Equals("Usable"))
                                    {
                                        @foreach (UsableDto usable in dungeonUsables)
                                        {
                                            <option value="@usable.Name">@usable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[4].Equals("Wearable"))
                                    {
                                        @foreach (WearableDto wearable in dungeonWearables)
                                        {
                                            <option value="@wearable.Name">@wearable.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @if (roomItemCount >= 6)
            {
                <div class="form-group mt-5">
                    <div class="row">
                        <div class="col-4">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="itemCategory[5]">
                                    <option value="" selected disabled hidden>Kategorie</option>
                                    <option value="Inspectable">Untersuchbar</option>
                                    <option value="Takeable">Aufnehmbar</option>
                                    <option value="Consumable">Konsumierbar</option>
                                    <option value="Usable">Nutzbar</option>
                                    <option value="Wearable">Kleidung</option>
                                </select>
                            </div>
                        </div>
                        <div class="col">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="roomItems[5]">
                                    @if (itemCategory[5].Equals("Inspectable"))
                                    {
                                        @foreach (InspectableDto inspectable in dungeonInspectables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[5].Equals("Takeable"))
                                    {
                                        @foreach (TakeableDto inspectable in dungeonTakeables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[5].Equals("Consumable"))
                                    {
                                        @foreach (ConsumableDto consumable in dungeonConsumables)
                                        {
                                            <option value="@consumable.Name">@consumable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[5].Equals("Usable"))
                                    {
                                        @foreach (UsableDto usable in dungeonUsables)
                                        {
                                            <option value="@usable.Name">@usable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[5].Equals("Wearable"))
                                    {
                                        @foreach (WearableDto wearable in dungeonWearables)
                                        {
                                            <option value="@wearable.Name">@wearable.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @if (roomItemCount >= 7)
            {
                <div class="form-group mt-5">
                    <div class="row">
                        <div class="col-4">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="itemCategory[6]">
                                    <option value="" selected disabled hidden>Kategorie</option>
                                    <option value="Inspectable">Untersuchbar</option>
                                    <option value="Takeable">Aufnehmbar</option>
                                    <option value="Consumable">Konsumierbar</option>
                                    <option value="Usable">Nutzbar</option>
                                    <option value="Wearable">Kleidung</option>
                                </select>
                            </div>
                        </div>
                        <div class="col">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="roomItems[6]">
                                    @if (itemCategory[6].Equals("Inspectable"))
                                    {
                                        @foreach (InspectableDto inspectable in dungeonInspectables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[6].Equals("Takeable"))
                                    {
                                        @foreach (TakeableDto inspectable in dungeonTakeables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[6].Equals("Consumable"))
                                    {
                                        @foreach (ConsumableDto consumable in dungeonConsumables)
                                        {
                                            <option value="@consumable.Name">@consumable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[6].Equals("Usable"))
                                    {
                                        @foreach (UsableDto usable in dungeonUsables)
                                        {
                                            <option value="@usable.Name">@usable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[6].Equals("Wearable"))
                                    {
                                        @foreach (WearableDto wearable in dungeonWearables)
                                        {
                                            <option value="@wearable.Name">@wearable.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @if (roomItemCount >= 8)
            {
                <div class="form-group mt-5">
                    <div class="row">
                        <div class="col-4">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="itemCategory[7]">
                                    <option value="" selected disabled hidden>Kategorie</option>
                                    <option value="Inspectable">Untersuchbar</option>
                                    <option value="Takeable">Aufnehmbar</option>
                                    <option value="Consumable">Konsumierbar</option>
                                    <option value="Usable">Nutzbar</option>
                                    <option value="Wearable">Kleidung</option>
                                </select>
                            </div>
                        </div>
                        <div class="col">
                            <div class="d-flex justify-content-center">
                                <select class="form-select" @bind="roomItems[7]">
                                    @if (itemCategory[7].Equals("Inspectable"))
                                    {
                                        @foreach (InspectableDto inspectable in dungeonInspectables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[7].Equals("Takeable"))
                                    {
                                        @foreach (TakeableDto inspectable in dungeonTakeables)
                                        {
                                            <option value="@inspectable.Name">@inspectable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[7].Equals("Consumable"))
                                    {
                                        @foreach (ConsumableDto consumable in dungeonConsumables)
                                        {
                                            <option value="@consumable.Name">@consumable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[7].Equals("Usable"))
                                    {
                                        @foreach (UsableDto usable in dungeonUsables)
                                        {
                                            <option value="@usable.Name">@usable.Name</option>
                                        }
                                    }
                                    @if (itemCategory[7].Equals("Wearable"))
                                    {
                                        @foreach (WearableDto wearable in dungeonWearables)
                                        {
                                            <option value="@wearable.Name">@wearable.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <hr class="featurette-divider mt-3" />

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-12 d-flex justify-content-center">
                        <h4 class="mt-1">Nachbarräume</h4>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12 d-flex justify-content-center">
                        <h5 class="mt-1">Norden</h5>
                    </div>
                </div>
                <div class="row">
                    <div class="col"></div>
                    <div class="col">
                        <select class="form-select" aria-label="Default select example" @bind="dungeonRoomModel.RoomNorth">
                            @if (!(dungeonRooms is null))
                            {
                                <option value="NoRoom" selected>Kein Nachbar</option>
                                @foreach (RoomDto dungeonRoom in dungeonRooms)
                                {
                                    @if (!dungeonRoom.Name.Equals(chosenRoom) && !dungeonRoom.Name.Equals(dungeonRoomModel.RoomEast) && !dungeonRoom.Name.Equals(dungeonRoomModel.RoomWest) && !dungeonRoom.Name.Equals(dungeonRoomModel.RoomSouth))
                                    {
                                        <option value="@dungeonRoom.Name">@dungeonRoom.Name</option>
                                    }
                                }
                            }
                        </select>
                    </div>
                    <div class="col"></div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <h5 class="mt-1">Westen</h5>
                    <div class="d-flex justify-content-center">
                        <select class="form-select" aria-label="Default select example" @bind="dungeonRoomModel.RoomWest">
                            @if (!(dungeonRooms is null))
                            {
                                <option value="NoRoom" selected>Kein Nachbar</option>
                                @foreach (RoomDto dungeonRoom in dungeonRooms)
                                {
                                    @if (!dungeonRoom.Name.Equals(chosenRoom) && !dungeonRoom.Name.Equals(dungeonRoomModel.RoomEast) && !dungeonRoom.Name.Equals(dungeonRoomModel.RoomNorth) && !dungeonRoom.Name.Equals(dungeonRoomModel.RoomSouth))
                                    {
                                        <option value="@dungeonRoom.Name">@dungeonRoom.Name</option>
                                    }
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="col"></div>
                <div class="col">
                    <div class="d-flex justify-content-end">
                        <h5 class="mt-1">Osten</h5>
                    </div>
                    <div class="d-flex justify-content-end">
                        <select class="form-select" aria-label="Default select example" @bind="dungeonRoomModel.RoomEast">
                            @if (!(dungeonRooms is null))
                            {
                                <option value="NoRoom" selected>Kein Nachbar</option>
                                @foreach (RoomDto dungeonRoom in dungeonRooms)
                                {
                                    @if (!dungeonRoom.Name.Equals(chosenRoom) && !dungeonRoom.Name.Equals(dungeonRoomModel.RoomNorth) && !dungeonRoom.Name.Equals(dungeonRoomModel.RoomWest) && !dungeonRoom.Name.Equals(dungeonRoomModel.RoomSouth))
                                    {
                                        <option value="@dungeonRoom.Name">@dungeonRoom.Name</option>
                                    }
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>


            <div class="row mt-3">
                <div class="col"></div>
                <div class="col">
                    <select class="form-select" aria-label="Default select example" @bind="dungeonRoomModel.RoomSouth">
                        @if (!(dungeonRooms is null))
                        {
                            <option value="NoRoom" selected>Kein Nachbar</option>
                            @foreach (RoomDto dungeonRoom in dungeonRooms)
                            {
                                @if (!dungeonRoom.Name.Equals(chosenRoom) && !dungeonRoom.Name.Equals(dungeonRoomModel.RoomEast) && !dungeonRoom.Name.Equals(dungeonRoomModel.RoomWest) && !dungeonRoom.Name.Equals(dungeonRoomModel.RoomNorth))
                                {
                                    <option value="@dungeonRoom.Name">@dungeonRoom.Name</option>
                                }
                            }
                        }
                    </select>
                    <h5 class="mt-1 text-center">Süden</h5>
                    <div class="d-flex justify-content-center">
                        <button class="btn btn-success mt-4 text-center" type="submit">Speichern</button>
                    </div>

                </div>
                <div class="col"></div>
            </div>
        </EditForm>

    </div>
</div>

@code {

    /// <summary>
    /// TODO
    /// </summary>
    string[] itemCategory = new string[8];

    /// <summary>
    /// TODO
    /// </summary>
    string[] roomItems = new string[8];

    /// <summary>
    /// TODO
    /// </summary>
    string chosenRoom = "NoRoom";

    /// <summary>
    /// TODO
    /// </summary>
    DungeonRoomModel dungeonRoomModel = new DungeonRoomModel();

    /// <summary>
    /// TODO
    /// </summary>
    EditContext roomContext;

    /// <summary>
    /// TODO
    /// </summary>
    List<RoomDto> dungeonRooms = new List<RoomDto>();

    #region Item Lists

    /// <summary>
    /// TODO
    /// </summary>
    List<InspectableDto> dungeonInspectables = new List<InspectableDto>();

    /// <summary>
    /// TODO
    /// </summary>
    List<TakeableDto> dungeonTakeables = new List<TakeableDto>();

    /// <summary>
    /// TODO
    /// </summary>
    List<ConsumableDto> dungeonConsumables = new List<ConsumableDto>();

    /// <summary>
    /// TODO
    /// </summary>
    List<WearableDto> dungeonWearables = new List<WearableDto>();

    /// <summary>
    /// TODO
    /// </summary>
    List<UsableDto> dungeonUsables = new List<UsableDto>();

    #endregion

    #region Item Dropdown Counters

    /// <summary>
    /// TODO
    /// </summary>
    int roomItemCount = 1;

    #endregion

    /// <summary>
    /// TODO
    /// </summary>
    protected override void OnInitialized()
    {
        #region toDelete

        RoomDto testRoom = new RoomDto();
        testRoom.Description = "KLa";
        testRoom.Name = "Leon";

        RoomDto testRoom2 = new RoomDto();
        testRoom2.Description = "Raum2";
        testRoom2.Name = "Raum2";

        TakeableDto exDto1 = new TakeableDto();
        exDto1.Name = "Dies ist ein test1";
        exDto1.Description = "Diest ist nur ein Test!1";
        dungeonTakeables.Add(exDto1);

        TakeableDto exDto2 = new TakeableDto();
        exDto2.Name = "Dies ist ein test2";
        exDto2.Description = "Diest ist nur ein Test!2";
        dungeonTakeables.Add(exDto2);

        TakeableDto exDto3 = new TakeableDto();
        exDto3.Name = "Dies ist ein test3";
        exDto3.Description = "Diest ist nur ein Test!3";
        dungeonTakeables.Add(exDto3);

        testRoom.Takeables = new List<TakeableDto>();
        testRoom.Takeables.Add(exDto1);
        Guid myGuid = Guid.NewGuid();
        testRoom2.Id = myGuid;
        testRoom.NeighborNorthId = myGuid;

        dungeonRooms.Add(testRoom);
        dungeonRooms.Add(testRoom2);
        #endregion

        roomContext = new EditContext(dungeonRoomModel);
        for (int i = 0; i < 8; i++)
        {
            itemCategory[i] = string.Empty;
        }
    }

    /// <summary>
    /// TODO
    /// </summary>
    /// <returns></returns>
    private async Task HandleRoomSubmit()
    {
        var validRoom = roomContext.Validate();
        if (validRoom)
        {
            bool newRoom = false;
            RoomDto submitRoom = dungeonRooms.Find(r => r.Name.Equals(dungeonRoomModel.Name));
            if (submitRoom is null)
            {
                submitRoom = new RoomDto();
                newRoom = true;
            }
            submitRoom.Name = dungeonRoomModel.Name;
            submitRoom.Description = dungeonRoomModel.Description;
            submitRoom.Inspectables = new List<InspectableDto>();
            submitRoom.Takeables = new List<TakeableDto>();
            submitRoom.Usables = new List<UsableDto>();
            submitRoom.Consumables = new List<ConsumableDto>();
            submitRoom.Wearables = new List<WearableDto>();
            for (int i = 0; i < roomItemCount; i++)
            {
                switch (itemCategory[i])
                {
                    case "Inspectable":
                        submitRoom.Inspectables.Add(dungeonInspectables.Find(r => r.Name.Equals(roomItems[i])));
                        break;
                    case "Takeable":
                        submitRoom.Takeables.Add(dungeonTakeables.Find(r => r.Name.Equals(roomItems[i])));
                        break;
                    case "Consumable":
                        submitRoom.Consumables.Add(dungeonConsumables.Find(r => r.Name.Equals(roomItems[i])));
                        break;
                    case "Wearable":
                        submitRoom.Wearables.Add(dungeonWearables.Find(r => r.Name.Equals(roomItems[i])));
                        break;
                    case "Usable":
                        submitRoom.Usables.Add(dungeonUsables.Find(r => r.Name.Equals(roomItems[i])));
                        break;
                }
            }
            if (!dungeonRoomModel.RoomNorth.Equals("NoRoom"))
            {
                submitRoom.NeighborNorthId = dungeonRooms.Find(r => r.Name.Equals(dungeonRoomModel.RoomNorth)).Id;
            }
            else
            {
                submitRoom.NeighborNorthId = Guid.Empty;
            }
            if (!dungeonRoomModel.RoomEast.Equals("NoRoom"))
            {
                submitRoom.NeighborEastId = dungeonRooms.Find(r => r.Name.Equals(dungeonRoomModel.RoomNorth)).Id;
            }
            else
            {
                submitRoom.NeighborEastId = Guid.Empty;
            }
            if (!dungeonRoomModel.RoomSouth.Equals("NoRoom"))
            {
                submitRoom.NeighborSouthId = dungeonRooms.Find(r => r.Name.Equals(dungeonRoomModel.RoomNorth)).Id;
            }
            else
            {
                submitRoom.NeighborSouthId = Guid.Empty;
            }
            if (!dungeonRoomModel.RoomWest.Equals("NoRoom"))
            {
                submitRoom.NeighborWestId = dungeonRooms.Find(r => r.Name.Equals(dungeonRoomModel.RoomNorth)).Id;
            }
            else
            {
                submitRoom.NeighborWestId = Guid.Empty;
            }
            if (newRoom)
            {
                dungeonRooms.Add(submitRoom);
            }
            chosenRoom = dungeonRoomModel.Name;
        }
        else
        {
            //TODO
        }
    }

    private EventCallback RoomSelectionChanged()
    {
        if (!chosenRoom.Equals(dungeonRoomModel.Name) && !chosenRoom.Equals("NoRoom"))
        {
            var newRoom = dungeonRooms.Find(r => r.Name.Equals(chosenRoom));
            if (!(newRoom is null))
            {
                dungeonRoomModel.Name = newRoom.Name;
                dungeonRoomModel.Description = newRoom.Description;
                roomItemCount = 0;
                int counter = 0;
                if (!(newRoom.Inspectables is null))
                {
                    newRoom.Inspectables.ToList().ForEach(i =>
                    {
                        if (!(i is null) && (!i.Name.Equals(string.Empty)))
                        {
                            itemCategory[counter] = "Inspectable";
                            roomItems[counter] = i.Name;
                            counter++;
                            roomItemCount++;
                        }
                    });
                }
                if (!(newRoom.Takeables is null))
                {
                    newRoom.Takeables.ToList().ForEach(i =>
                    {
                        if (!(i is null) && (!i.Name.Equals(string.Empty)))
                        {
                            itemCategory[counter] = "Takeable";
                            roomItems[counter] = i.Name;
                            counter++;
                            roomItemCount++;
                        }
                    });
                }
                if (!(newRoom.Consumables is null))
                {
                    newRoom.Consumables.ToList().ForEach(i =>
                    {
                        if (!(i is null) && (!i.Name.Equals(string.Empty)))
                        {
                            itemCategory[counter] = "Consumable";
                            roomItems[counter] = i.Name;
                            counter++;
                            roomItemCount++;
                        }
                    });
                }
                if (!(newRoom.Usables is null))
                {
                    newRoom.Usables.ToList().ForEach(i =>
                    {
                        if (!(i is null) && (!i.Name.Equals(string.Empty)))
                        {
                            itemCategory[counter] = "Usable";
                            roomItems[counter] = i.Name;
                            counter++;
                            roomItemCount++;
                        }
                    });
                }
                if (!(newRoom.Wearables is null))
                {
                    newRoom.Wearables.ToList().ForEach(i =>
                    {
                        if (!(i is null) && (!i.Name.Equals(string.Empty)))
                        {
                            itemCategory[counter] = "Wearable";
                            roomItems[counter] = i.Name;
                            counter++;
                            roomItemCount++;
                        }
                    });
                }
                if (!(newRoom.NeighborNorthId.Equals(Guid.Empty)))
                {
                    dungeonRoomModel.RoomNorth = dungeonRooms.Find(r => r.Id.Equals(newRoom.NeighborNorthId)).Name;
                }
                if (!(newRoom.NeighborEastId.Equals(Guid.Empty)))
                {
                    dungeonRoomModel.RoomEast = dungeonRooms.Find(r => r.Id.Equals(newRoom.NeighborEastId)).Name;
                }
                if (!(newRoom.NeighborSouthId.Equals(Guid.Empty)))
                {
                    dungeonRoomModel.RoomSouth = dungeonRooms.Find(r => r.Id.Equals(newRoom.NeighborSouthId)).Name;
                }
                if (!(newRoom.NeighborWestId.Equals(Guid.Empty)))
                {
                    dungeonRoomModel.RoomWest = dungeonRooms.Find(r => r.Id.Equals(newRoom.NeighborWestId)).Name;
                }
            }
        }
        return EventCallback.Empty;
    }

    private void NameFieldLostFocus(System.EventArgs args)
    {
        RoomDto checkRoom = dungeonRooms.Find(r => r.Name.Equals(dungeonRoomModel.Name));
        if (checkRoom is null)
        {
            return;
        }
        else
        {
            for (int i = 0; i < 8; i++)
            {
                roomItems[i] = "NoItem";
                itemCategory[i] = "NoCategory";
            }
            dungeonRoomModel.RoomNorth = "NoRoom";
            dungeonRoomModel.RoomEast = "NoRoom";
            dungeonRoomModel.RoomSouth = "NoRoom";
            dungeonRoomModel.RoomWest = "NoRoom";
            chosenRoom = dungeonRoomModel.Name;
            dungeonRoomModel.Name = checkRoom.Name;
            dungeonRoomModel.Description = checkRoom.Description;
            int counter = 0;
            if (!(checkRoom.Inspectables is null))
            {
                checkRoom.Inspectables.ToList().ForEach(i =>
                {
                    if (!(i is null) && (!i.Name.Equals(string.Empty)))
                    {
                        itemCategory[counter] = "Inspectable";
                        roomItems[counter] = i.Name;
                        counter++;
                        roomItemCount++;
                    }
                });
            }
            if (!(checkRoom.Takeables is null))
            {
                checkRoom.Takeables.ToList().ForEach(i =>
                {
                    if (!(i is null) && (!i.Name.Equals(string.Empty)))
                    {
                        itemCategory[counter] = "Takeable";
                        roomItems[counter] = i.Name;
                        counter++;
                        roomItemCount++;
                    }
                });
            }
            if (!(checkRoom.Consumables is null))
            {
                checkRoom.Consumables.ToList().ForEach(i =>
                {
                    if (!(i is null) && (!i.Name.Equals(string.Empty)))
                    {
                        itemCategory[counter] = "Consumable";
                        roomItems[counter] = i.Name;
                        counter++;
                        roomItemCount++;
                    }
                });
            }
            if (!(checkRoom.Usables is null))
            {
                checkRoom.Usables.ToList().ForEach(i =>
                {
                    if (!(i is null) && (!i.Name.Equals(string.Empty)))
                    {
                        itemCategory[counter] = "Usable";
                        roomItems[counter] = i.Name;
                        counter++;
                        roomItemCount++;
                    }
                });
            }
            if (!(checkRoom.Wearables is null))
            {
                checkRoom.Wearables.ToList().ForEach(i =>
                {
                    if (!(i is null) && (!i.Name.Equals(string.Empty)))
                    {
                        itemCategory[counter] = "Wearable";
                        roomItems[counter] = i.Name;
                        counter++;
                        roomItemCount++;
                    }
                });
            }
            if (!(checkRoom.NeighborNorthId.Equals(Guid.Empty)))
            {
                dungeonRoomModel.RoomNorth = dungeonRooms.Find(r => r.Id.Equals(checkRoom.NeighborNorthId)).Name;
            }
            if (!(checkRoom.NeighborEastId.Equals(Guid.Empty)))
            {
                dungeonRoomModel.RoomEast = dungeonRooms.Find(r => r.Id.Equals(checkRoom.NeighborEastId)).Name;
            }
            if (!(checkRoom.NeighborSouthId.Equals(Guid.Empty)))
            {
                dungeonRoomModel.RoomSouth = dungeonRooms.Find(r => r.Id.Equals(checkRoom.NeighborSouthId)).Name;
            }
            if (!(checkRoom.NeighborWestId.Equals(Guid.Empty)))
            {
                dungeonRoomModel.RoomWest = dungeonRooms.Find(r => r.Id.Equals(checkRoom.NeighborWestId)).Name;
            }

        }
    }

    private void NewRoomButtonClicked(System.EventArgs args)
    {
        chosenRoom = "NoRoom";
        dungeonRoomModel.Name = string.Empty;
        dungeonRoomModel.Description = string.Empty;
        dungeonRoomModel.RoomNorth = "NoRoom";
        dungeonRoomModel.RoomEast = "NoRoom";
        dungeonRoomModel.RoomWest = "NoRoom";
        dungeonRoomModel.RoomSouth = "NoRoom";
        roomItemCount = 0;
        for (int i = 0; i < 8; i++)
        {
            roomItems[i] = "NoItem";
        }

    }
    #region Item Dropdown Buttons

    /// <summary>
    /// TODO
    /// </summary>
    private void AddItemButtonClicked()
    {
        if (roomItemCount < 8)
            roomItemCount++;
    }


    /// <summary>
    /// TODO
    /// </summary>
    private void RemoveItemButtonClicked()
    {
        if (roomItemCount > 0)
            roomItemCount--;
    }

    #endregion
}

